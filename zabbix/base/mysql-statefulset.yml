apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zabbix-mysql
spec:
  serviceName: mysql
  replicas: 1
  selector: { matchLabels: { app: mysql } }
  template:
    metadata: { labels: { app: mysql } }
    spec:
      containers:
        - name: zabbix-mysql
          image: mysql:8.0
          args: ["--default-authentication-plugin=mysql_native_password",
                 "--sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION",
                 --log-bin-trust-function-creators=1,
                 "--character-set-server=utf8mb4",
                 "--collation-server=utf8mb4_bin"]
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom: { secretKeyRef: { name: zabbix-db-secret, key: mysql-root-password } }
            - name: MYSQL_DATABASE
              valueFrom: { secretKeyRef: { name: zabbix-db-secret, key: mysql-database } }
            - name: MYSQL_USER
              valueFrom: { secretKeyRef: { name: zabbix-db-secret, key: mysql-user } }
            - name: MYSQL_PASSWORD
              valueFrom: { secretKeyRef: { name: zabbix-db-secret, key: mysql-password } }
          ports: [{ containerPort: 3306, name: mysql }]
          volumeMounts: [{ name: data, subPath: data, mountPath: /var/lib/mysql }]
          readinessProbe: { tcpSocket: { port: 3306 }, initialDelaySeconds: 10, periodSeconds: 5 }
  volumeClaimTemplates:
    - metadata: { name: data }
      spec:
        accessModes: ["ReadWriteOnce"]
        resources: { requests: { storage: 20Gi } }

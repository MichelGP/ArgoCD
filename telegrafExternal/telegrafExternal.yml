---
apiVersion: v1
kind: Namespace
metadata:
  name: telegraf-external
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: telegraf-external
data:
  telegraf.conf: |
    # ===== Telegraf: MQTT -> Mimir (Prometheus remote_write) =====

    [agent]
      interval = "10s"
      flush_interval = "10s"
      round_interval = true

    # ---------- INPUT: MQTT ----------
    [[inputs.mqtt_consumer]]
      servers = ["tcp://mqtt-broker.telegraf-external.svc.cluster.local:1883"]
      topics  = ["p1monitor/#"]
      qos = 0
      connection_timeout = "30s"
      client_id = "telegraf-mqtt"

      # Topic tag
      topic_tag = "p1monitor"

      # Auth (only needed if you enable it in Mosquitto)
      username = "Scone2194"
      password = "mMF$v9$$4jkedM"

      # Parse JSON payloads
      data_format = "json_v2"

      [[inputs.mqtt_consumer.json_v2]]
        measurement_name = "mqtt_sensor"

        [[inputs.mqtt_consumer.json_v2.object]]
          path = ""
          tags = ["device"]   # JSON keys to promote to tags

          [inputs.mqtt_consumer.json_v2.object.fields]
            temp_c   = "float"
            humidity = "float"

    # ---------- OUTPUT: Mimir (Prometheus remote_write over HTTP) ----------
    [[outputs.http]]
      url = "http://mimir-nginx.mimir.svc:80/api/v1/push"
      method = "POST"
      data_format = "prometheusremotewrite"

      [outputs.http.headers]
        Content-Type = "application/x-protobuf"
        Content-Encoding = "snappy"
        X-Prometheus-Remote-Write-Version = "0.1.0"
        X-Scope-OrgID = "fire"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf-deployment
  namespace: telegraf-external
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf-external
  template:
    metadata:
      labels:
        app: telegraf-external
    spec:
      containers:
        - name: telegraf
          image: telegraf:1.36.2-alpine
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          ports:
            - name: 8125-udp
              protocol: UDP
              containerPort: 8125
            - name: 8092-udp
              protocol: UDP
              containerPort: 8092
            - name: 8094-tcp
              protocol: TCP
              containerPort: 8094
          volumeMounts:
            - name: config
              mountPath: /etc/telegraf
              readOnly: true
          livenessProbe:
            tcpSocket: { port: 8094 }
            initialDelaySeconds: 10
            periodSeconds: 20
      volumes:
        - name: config
          configMap:
            name: telegraf-config
            items:
              - key: telegraf.conf
                path: telegraf.conf
---
apiVersion: v1
kind: Service
metadata:
  name: telegraf-service
  namespace: telegraf-external
spec:
  type: LoadBalancer
  selector:
    app: telegraf-external
  ports:
    - name: 8125-udp
      port: 8125
      targetPort: 8125
    - name: 8092-udp
      port: 8092
      targetPort: 8092
    - name: 8094-tcp
      port: 8094
      targetPort: 8094
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mqtt-broker
  namespace: telegraf-external
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mqtt-broker
  template:
    metadata:
      labels:
        app: mqtt-broker
    spec:
      containers:
        - name: mosquitto
          image: eclipse-mosquitto:2.0.22
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          ports:
            - containerPort: 1883
              name: mqtt
          volumeMounts:
            - name: mosquitto-config
              mountPath: /mosquitto/config
      volumes:
        - name: mosquitto-config
          configMap:
            name: mosquitto-config
---
apiVersion: v1
kind: Service
metadata:
  name: mqtt-broker
  namespace: telegraf-external
spec:
  selector:
    app: mqtt-broker
  ports:
    - name: mqtt
      protocol: TCP
      port: 1883
      targetPort: 1883
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-config
  namespace: telegraf-external
data:
  mosquitto.conf: |
    listener 1883
    allow_anonymous true

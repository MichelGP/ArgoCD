apiVersion: v1
kind: Namespace
metadata:
  name: mcp-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-hello
  namespace: mcp-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-hello
  template:
    metadata:
      labels:
        app: mcp-hello
    spec:
      containers:
        - name: server
          image: greypixel/mcp-demo/mcp-hello-http:0.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
          # These are the same as your Docker CMD
          args: ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8000"]
          # Basic health checks (TCP is safest for a minimal app)
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-hello
  namespace: mcp-demo
spec:
  selector:
    app: mcp-hello
  ports:
    - name: http
      port: 80        # Cluster port
      targetPort: 8000 # Container port
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mcp-hello
  namespace: mcp-demo
  annotations:
    ingress.cilium.io/loadbalancer-mode: "shared"
spec:
  ingressClassName: nginx
  rules:
    - host: mcp-demo.greypixel.nl
      http:
        paths:
          - path: /mcp
            pathType: Prefix
            backend:
              service:
                name: mcp-hello
                port:
                  number: 80
  # If you have TLS ready, uncomment and set your cert secret name:
  # tls:
  #   - hosts: [mcp.example.com]
  #     secretName: mcp-hello-tls
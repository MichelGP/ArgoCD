---
apiVersion: v1
kind: Namespace
metadata:
  name: alloy-external
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  namespace: alloy-external
data:
  alloy.hcl: |
    otelcol.receiver.otlp "ingest" {
      http {}
      grpc {}
      output {
        metrics = [otelcol.processor.batch.metrics.input]
        logs    = [otelcol.processor.batch.logs.input]
        traces  = [otelcol.processor.batch.traces.input]
      }
    }

    otelcol.processor.batch "metrics" {
      send_batch_size = 8192
      timeout = "5s"
      output { metrics = [otelcol.exporter.prometheusremotewrite.mimir.input] }
    }

    otelcol.processor.batch "logs" {
      send_batch_size = 2048
      timeout = "5s"
      output { logs = [otelcol.exporter.loki.default.input] }
    }

    otelcol.processor.batch "traces" {
      send_batch_size = 512
      timeout = "5s"
      output { traces = [otelcol.exporter.otlphttp.tempo.input] }
    }

    # Mimir: Prometheus Remote Write
    otelcol.exporter.prometheusremotewrite "mimir" {
      endpoint = "http://mimir-nginx.mimir.svc:80/api/v1/push"
      # headers = { "X-Scope-OrgID" = "tenant-a" }  # if multitenant
      # tls { insecure = true }                      # HTTP-only, internal net
    }

    # Loki: HTTP push
    otelcol.exporter.loki "default" {
      client {
        endpoint = "http://loki-gateway.loki.svc.cluster.local:80/loki/api/v1/push"
        # headers = { "X-Scope-OrgID" = "tenant-a" }
      }
    }

    # Tempo: OTLP/HTTP
    otelcol.exporter.otlphttp "tempo" {
      client {
        endpoint = "http://tempo-distributor.tempo.svc.cluster.local:4318"
        # tls { insecure = true }  # if needed
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alloy-deployment
  namespace: alloy-external
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alloy
  template:
    metadata:
      labels:
        app: alloy
    spec:
      nodeSelector:
        logs: ingest
      containers:
        - name: alloy
          image: grafana/alloy:latest
          args:
            - "run"
            - "/etc/alloy/alloy.hcl"
          ports:
            - name: http2-otlp
              containerPort: 4318
          volumeMounts:
            - name: config
              mountPath: /etc/alloy
              readOnly: true
          livenessProbe:
            tcpSocket: { port: 4318 }
            initialDelaySeconds: 10
            periodSeconds: 20
      volumes:
        - name: config
          configMap:
            name: alloy-config
            items:
              - key: alloy.hcl
                path: alloy.hcl
---
apiVersion: v1
kind: Service
metadata:
  name: alloy-service
  namespace: alloy-external
spec:
  type: LoadBalancer
  selector:
    app: alloy
  ports:
    - name: http2-otlp
      port: 4318
      targetPort: http2-otlp
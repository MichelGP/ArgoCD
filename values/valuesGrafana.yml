image:
  registry: docker.io
  repository: grafana/grafana
  tag: "12.3.0-18546308611"
  pullPolicy: IfNotPresent

replicas: 1

resources:
  requests:
    cpu: "100m"
    memory: "256Mi"
  limits:
    cpu: "1"
    memory: "1Gi"

persistence:
  enabled: false

grafana.ini:
  server:
    root_url: "https://grafana.greypixel.nl"
  auth:
    disable_login_form: true
    oauth_auto_login: true
  auth.generic_oauth:
    enabled: true
    name: Keycloak-OAuth
    allow_sign_up: true
    client_id: $__file{/etc/grafana/oidc/client_id}
    client_secret: $__file{/etc/grafana/oidc/client_secret}
    scopes: "openid email profile offline_access roles"
    auth_url: https://auth.greypixel.nl/realms/gpworkz/protocol/openid-connect/auth
    token_url: https://auth.greypixel.nl/realms/gpworkz/protocol/openid-connect/token
    api_url: https://auth.greypixel.nl/realms/gpworkz/protocol/openid-connect/userinfo
    signout_redirect_url: https://auth.greypixel.nl/realms/gpworkz/protocol/openid-connect/logout?redirect_uri=https://grafana.greypixel.nl
    email_attribute_path: email
    login_attribute_path: username
    name_attribute_path: full_name
    org_attribute_path: groups
    org_mapping: fire:4:Editor mainOrg:1:GrafanaAdmin # maps groups to orgId:role pairs
    #role_attribute_path: contains(roles[*], 'grafanaadmin') && 'GrafanaAdmin' || contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || contains(roles[*], 'viewer') && 'Viewer'
    allow_assign_grafana_admin: true
    #role_attribute_strict: true # if no orgId is found, user is denied access
  tracing.opentelemetry.otlp:
    address: tempo-distributor.tempo.svc.cluster.local:4317
    insecure: true

extraSecretMounts:
  - name: oidc-secrets
    secretName: grafana-oidc-secrets
    mountPath: /etc/grafana/oidc
    readOnly: true

adminUser: Admin
adminPassword: a3vnwwEs

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Loki (smoke)
        type: loki
        access: proxy
        url: http://loki-gateway.loki.svc.cluster.local:80
        jsonData:
          httpHeaderName1: 'X-Scope-OrgID'
        secureJsonData:
          httpHeaderValue1: 'smoke'
      - name: Loki (fire)
        type: loki
        access: proxy
        url: http://loki-gateway.loki.svc.cluster.local:80
        jsonData:
          httpHeaderName1: 'X-Scope-OrgID'
        secureJsonData:
          httpHeaderValue1: 'fire'
      - name: Loki (spark)
        type: loki
        access: proxy
        url: http://loki-gateway.loki.svc.cluster.local:80
        jsonData:
          httpHeaderName1: 'X-Scope-OrgID'
        secureJsonData:
          httpHeaderValue1: 'spark'
      - name: Mimir (smoke)
        type: prometheus
        access: proxy
        url: http://mimir-nginx.mimir.svc:80/prometheus
        jsonData:
          httpHeaderName1: 'X-Scope-OrgID'
        secureJsonData:
          httpHeaderValue1: 'smoke'
      - name: Mimir (fire)
        type: prometheus
        access: proxy
        url: http://mimir-nginx.mimir.svc:80/prometheus
        jsonData:
          httpHeaderName1: 'X-Scope-OrgID'
        secureJsonData:
          httpHeaderValue1: 'fire'
      - name: Mimir (spark)
        type: prometheus
        access: proxy
        url: http://mimir-nginx.mimir.svc:80/prometheus
        jsonData:
          httpHeaderName1: 'X-Scope-OrgID'
        secureJsonData:
          httpHeaderValue1: 'spark'
      - name: Tempo
        type: tempo
        access: proxy
        url: http://tempo-query-frontend.tempo.svc.cluster.local:3200
      - name: Pyroscope
        type: grafana-pyroscope-datasource
        uid: pyroscope
        url: http://pyroscope-querier.pyroscope.svc.cluster.local.:4040/

env:
  GF_INSTALL_PLUGINS: grafana-pyroscope-app
  GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE: true # can be false when keycloak has valid cert
  GF_AUTH_ANONYMOUS_ENABLED: "false"
  GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
  GF_DIAGNOSTICS_PROFILING_ENABLED: "true"
  GF_DIAGNOSTICS_PROFILING_ADDR: 0.0.0.0
  GF_DIAGNOSTICS_PROFILING_PORT: 9094
  GF_DATABASE_TYPE: mysql
  GF_DATABASE_HOST: mysql-grafana.mysql-grafana.svc.cluster.local:3306
  GF_DATABASE_NAME: grafana
  GF_DATABASE_USER: grafana
  GF_DATABASE_PASSWORD: some-password-string
  GF_DATABASE_SSL_MODE: disable

podAnnotations:
  profiles.grafana.com/cpu.scrape: "true"
  profiles.grafana.com/cpu.port: "9094"
  profiles.grafana.com/memory.scrape: "true"
  profiles.grafana.com/memory.port: "9094"
  profiles.grafana.com/goroutine.scrape: "true"
  profiles.grafana.com/goroutine.port: "9094"
